/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MasterContesterRegistry,
  MasterContesterRegistryInterface,
} from "../../../contracts/ve/MasterContesterRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_votingEscrow",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contester",
        type: "address",
      },
    ],
    name: "EmergencyMasterContesterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contester",
        type: "address",
      },
    ],
    name: "EmergencyMasterContesterRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "elected",
        type: "address[]",
      },
    ],
    name: "EpochFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldCount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newCount",
        type: "uint256",
      },
    ],
    name: "MasterContesterCountChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "candidate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "VoteCast",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "candidate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
    ],
    name: "VoteUndone",
    type: "event",
  },
  {
    inputs: [],
    name: "EPOCH_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "candidateVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contester",
        type: "address",
      },
    ],
    name: "emergencyAddMasterContester",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_contester",
        type: "address",
      },
    ],
    name: "emergencyRemoveMasterContester",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "epochStartTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finalizeEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getMasterContesters",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTopCandidates",
    outputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "votes",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "getVotesCast",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epoch",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "hasVoted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "heapIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "candidate",
        type: "address",
      },
    ],
    name: "isMasterContester",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isNewEpoch",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastVoteEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastVoteWeight",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "masterContesterCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "masterContesters",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_count",
        type: "uint256",
      },
    ],
    name: "setMasterContesterCount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "timeUntilNextEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "topCandidatesHeap",
    outputs: [
      {
        internalType: "address",
        name: "candidate",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "votes",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_candidates",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_candidates",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "voteMultiple",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "votesCast",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "votingEscrow",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0346100ca57601f61235038819003918201601f19168301916001600160401b038311848410176100cf578084926020946040528339810103126100ca57516001600160a01b039081811681036100ca576000543360018060a01b0319821617600055604051923391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3600360015560805242600355600160025561226a90816100e68239608051818181610ae801528181610b610152818161103f01526110e00152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c90816323ef2746146115eb5750806340c6fb63146115b1578063438596321461158b5780634c4fbb9a1461106e5780634f2bfe5b1461102957806353262c5114610a315780635a5da62714610a0e5780635b811b17146109ad5780635c98ccf71461098f578063715018a614610948578063766718081461092a5780637b7d02d01461088157806382ae9ef71461082257806386852c21146107e85780638da5cb5b146107bf578063a70b9f0c146107a1578063aca611d91461075f578063b00cf04914610725578063b232f2f0146105bf578063b25320911461059c578063b7bc7f1c14610377578063e01466cb14610323578063e48fd9bc146102ff578063eaf8682b146102da578063ed0d4fc714610296578063f2fde38b146101e7578063f60ca641146101c95763fa463ae11461015357600080fd5b346101c45760403660031901126101c45761016c611637565b600435600052600860205260406000209060018060a01b03166000526020526101c06101a56101ac6040600020604051928380926117f9565b038261185a565b6040519182916020835260208301906116ae565b0390f35b600080fd5b346101c45760003660031901126101c4576020600354604051908152f35b346101c45760203660031901126101c457610200611621565b61020861173d565b6001600160a01b03908116908115610242576000548260018060a01b031982161760005516600080516020612215833981519152600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b346101c45760203660031901126101c4576004356006548110156101c4576102bf60409161171e565b506001808060a01b0382541691015482519182526020820152f35b346101c45760003660031901126101c45760206102f561194c565b6040519015158152f35b346101c45760003660031901126101c4576101c06040516101ac816101a581611795565b346101c45760203660031901126101c4577fc93bd77b50242f482eb3dadedf54ea9e90f71ba6ee214dc1f715a7142a49a934604060043561036261173d565b600154908060015582519182526020820152a1005b346101c45760003660031901126101c45760065461039481611894565b9060005b81811061056c575060005b8181106104b657506103b48161187d565b906103c2604051928361185a565b808252601f1990816103d38261187d565b019060209136838601376103e68161187d565b946103f4604051968761185a565b8186526104008261187d565b868401940136853760005b8281106104675750505061042e93816040519586956040875260408701906116ae565b9185830382870152519182815201929160005b82811061045057505050500390f35b835185528695509381019392810192600101610441565b949593946104ad906001600160a01b036104818285611904565b51511661048e828a611904565b528461049a8285611904565b5101516104a78288611904565b526118f5565b9594939561040b565b60018101808211610556575b8281106104d857506104d3906118f5565b6103a3565b610507906020949294806104ec8386611904565b510151906104fa8786611904565b5101511061050f576118f5565b9290926104c2565b6105198584611904565b516105248285611904565b5161052f8786611904565b5261053a8685611904565b506105458285611904565b526105508184611904565b506118f5565b634e487b7160e01b600052601160045260246000fd5b8061058261057c6105979361171e565b50611918565b61058c8286611904565b526105508185611904565b610398565b346101c45760203660031901126101c45760206102f56105ba611621565b611962565b346101c45760203660031901126101c4576105d8611621565b6105e061173d565b6105e981611962565b156106e7576001600160a01b039081169060005b60045490818110156106df578291846106158361167d565b959054600396871b1c161461063557506106309192506118f5565b6105fd565b60001991818301918211610556576106608461065361067f9461167d565b905490881b1c169161167d565b90919082549060031b9160018060a01b03809116831b921b1916179055565b60045480156106c95701916106938361167d565b81939154921b1b191690556004555b7f336df7066c26b674a0da85016d760af1838d3254e816ca5a0e523d8eecfe0a93600080a2005b634e487b7160e01b600052603160045260246000fd5b5050506106a2565b60405162461bcd60e51b81526020600482015260166024820152752737ba10309036b0b9ba32b91031b7b73a32b9ba32b960511b6044820152606490fd5b346101c45760203660031901126101c4576001600160a01b03610746611621565b1660005260076020526020604060002054604051908152f35b346101c45760203660031901126101c4576004356004548110156101c45761078860209161167d565b905460405160039290921b1c6001600160a01b03168152f35b346101c45760003660031901126101c457602060405162093a808152f35b346101c45760003660031901126101c4576000546040516001600160a01b039091168152602090f35b346101c45760203660031901126101c4576001600160a01b03610809611621565b16600052600a6020526020604060002054604051908152f35b346101c45760003660031901126101c45761083b61194c565b1561084a5761084861201b565b005b60405162461bcd60e51b815260206004820152600f60248201526e115c1bd8da081b9bdd08195b991959608a1b6044820152606490fd5b346101c45760203660031901126101c45761089a611621565b6108a261173d565b6108ab81611962565b6108e8576108b881611ff6565b6001600160a01b03167f97bdc37b440a9620b3ede406c03aabb2ef5a2a6a39af59797ca796d0a35588ef600080a2005b60405162461bcd60e51b815260206004820152601a60248201527920b63932b0b23c90309036b0b9ba32b91031b7b73a32b9ba32b960311b6044820152606490fd5b346101c45760003660031901126101c4576020600254604051908152f35b346101c45760003660031901126101c45761096161173d565b600080546001600160a01b0319811682556001600160a01b03166000805160206122158339815191528280a3005b346101c45760003660031901126101c4576020600154604051908152f35b346101c45760603660031901126101c4576109c6611637565b604435906004356000526008602052604060002060018060a01b0380921660005260205260406000209182548110156101c45760209260005282600020015416604051908152f35b346101c45760003660031901126101c4576020610a296119e7565b604051908152f35b346101c45760403660031901126101c4576004356001600160401b0381116101c457610a6190369060040161164d565b906024356001600160401b0381116101c457610a8190369060040161164d565b60039291925462093a8081018091116105565742101561101c575b60005b818110610aa857005b610ab3818386611a8d565b3560035462093a8081018091116105565742101561100f575b6040516331a9108f60e11b8152600481018290526020816024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa908115610f4a57600091610fcd575b50336001600160a01b0390911603610f9657600254610b4033826119b3565b610f56576040516339f890b560e21b815260048101929092526020826024817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165afa918215610f4a57600092610f16575b508115610edf57336000526009602052604060002054908115159182610ed5575b5050610ec7575b600254600052600860205260406000203360005260205260406000209060018060401b038711610dfe5781610bf8888094611a16565b859060005260206000209060005b848110610eac5750505090610c3891600254336000526009602052604060002055600a60205280604060002055611a6d565b60005b868110610c52575050610c4d906118f5565b610a9f565b6001600160a01b03610c6d610c68838a89611a8d565b611a59565b16600052600590816020526040600020610c8884825461193f565b9055610c98610c68828a89611a8d565b916001600160a01b03610caf610c68848c8b611a8d565b166000526020526040600020549160018060a01b03811660005260076020526040600020541515600014610d69576001600160a01b0316600090815260076020526040902054916000198301831061055657610d6492610d24916001610d18600019840161171e565b50015560001901611d75565b610d32610c68828a89611a8d565b6002549060405191858352602083015260018060a01b0316906000805160206121f583398151915260403392a36118f5565b610c3b565b91600690815490600191825411600014610e145760405190610d8a8261183f565b6001600160a01b03861682526020820152825491600160401b831015610dfe5782610dbb91610dc19401855561171e565b90611d45565b549182600019810111610556576001600160a01b03166000908152600760205260409020829055610d6491610df99060001901611d75565b610d24565b634e487b7160e01b600052604160045260246000fd5b81610d6495929350610e246116eb565b5001548111610e36575b505050610d24565b610e8490610e426116eb565b50546001600160a01b0316600090815260076020526040808220919091555190610e6b8261183f565b6001600160a01b03841682526020820152610dbb6116eb565b6001600160a01b0316600090815260076020526040902055610ea4611dda565b888080610e2e565b6001906020610eba84611a59565b9301928185015501610c06565b610ed033611a9d565b610bc2565b1090508780610bbb565b60405162461bcd60e51b815260206004820152600f60248201526e2737903b37ba34b733903837bbb2b960891b6044820152606490fd5b9091506020813d602011610f42575b81610f326020938361185a565b810103126101c457519087610b9a565b3d9150610f25565b6040513d6000823e3d90fd5b60405162461bcd60e51b8152602060048201526018602482015277082d8e4cac2c8f240ecdee8cac840e8d0d2e640cae0dec6d60431b6044820152606490fd5b60405162461bcd60e51b815260206004820152600f60248201526e2737ba103a37b5b2b71037bbb732b960891b6044820152606490fd5b90506020813d602011611007575b81610fe86020938361185a565b810103126101c457516001600160a01b03811681036101c45787610b21565b3d9150610fdb565b61101761201b565b610acc565b61102461201b565b610a9c565b346101c45760003660031901126101c4576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b346101c45760403660031901126101c4576001600160401b036004358181116101c45761109f90369060040161164d565b9190602491823560035462093a80810180911161157657421015611569575b6040516331a9108f60e11b8152600481018290526001600160a01b03926020917f00000000000000000000000000000000000000000000000000000000000000008516919083818981865afa908115610f4a57600091611533575b5085339116036114fd5760029384549061113333836119b3565b6114be57849089604051809681936339f890b560e21b835260048301525afa928315610f4a5760009361148f575b50821561145957336000526009845260406000205490811515918261144f575b5050611441575b8354600052600883526040600020336000528352604060002090881161142c57806111b4898093611a16565b8690600052836000209060005b83811061140d575050506111ef9184543360005260098552604060002055600a845280604060002055611a6d565b9360005b8781106111fc57005b8461120b610c68838b86611a8d565b166000526005808452604060002061122488825461193f565b9055611234610c68838b86611a8d565b9086611244610c68858d88611a8d565b1660005284528560406000205491168060005260079081865260406000205415156000146112f25760005284526040600020549060001982019182116112dd57816112a09160016112986112d8969561171e565b500155611d75565b6112ae610c68828b86611a8d565b86865491604051928a84528784015216906000805160206121f583398151915260403392a36118f5565b6111f3565b88634e487b7160e01b60005260116004526000fd5b91600690815460019081541160001461139357604051916113128361183f565b85835288830152825490600160401b82101561137e5781610dbb9161133a949301855561171e565b549060001982019282841161136957916112d8949391611364936000528752604060002055611d75565b6112a0565b8a634e487b7160e01b60005260116004526000fd5b8c634e487b7160e01b60005260416004526000fd5b929150926112d89493836113a56116eb565b50015481116113b8575b505050506112a0565b6113f1908a6113c56116eb565b50541660005283895260006040812055604051906113e28261183f565b83825289820152610dbb6116eb565b6000528552604060002055611404611dda565b898080806113af565b819293508561141d600193611a59565b858301558b94930191016111c1565b86634e487b7160e01b60005260416004526000fd5b61144a33611a9d565b611188565b1090508980611181565b60405162461bcd60e51b815260048101859052600f818a01526e2737903b37ba34b733903837bbb2b960891b6044820152606490fd5b9092508381813d83116114b7575b6114a7818361185a565b810103126101c457519189611161565b503d61149d565b60405162461bcd60e51b8152600481018690526018818b015277082d8e4cac2c8f240ecdee8cac840e8d0d2e640cae0dec6d60431b6044820152606490fd5b60405162461bcd60e51b815260048101849052600f818901526e2737ba103a37b5b2b71037bbb732b960891b6044820152606490fd5b90508381813d8311611562575b61154a818361185a565b810103126101c4575185811681036101c45789611119565b503d611540565b61157161201b565b6110be565b84634e487b7160e01b60005260116004526000fd5b346101c45760403660031901126101c45760206102f56115a9611637565b6004356119b3565b346101c45760203660031901126101c4576001600160a01b036115d2611621565b1660005260096020526020604060002054604051908152f35b346101c45760203660031901126101c4576020906001600160a01b0361160f611621565b16600052600582526040600020548152f35b600435906001600160a01b03821682036101c457565b602435906001600160a01b03821682036101c457565b9181601f840112156101c4578235916001600160401b0383116101c4576020808501948460051b0101116101c457565b60045481101561169857600460005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b90815180825260208080930193019160005b8281106116ce575050505090565b83516001600160a01b0316855293810193928101926001016116c0565b6006541561169857600660009081527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f91565b60065481101561169857600660005260206000209060011b0190600090565b6000546001600160a01b0316330361175157565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b6004805480835260009182526020928301927f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b92905b8282106117d9575050505090565b83546001600160a01b0316855293840193600193840193909101906117cb565b90815480825260208092019260005281600020916000905b82821061181f575050505090565b83546001600160a01b031685529384019360019384019390910190611811565b604081019081106001600160401b03821117610dfe57604052565b601f909101601f19168101906001600160401b03821190821017610dfe57604052565b6001600160401b038111610dfe5760051b60200190565b9061189e8261187d565b6040906118ad8251918261185a565b83815280936118be601f199161187d565b0191600090815b8481106118d3575050505050565b60209082516118e18161183f565b8481528285818301528287010152016118c5565b60001981146105565760010190565b80518210156116985760209160051b010190565b906040516119258161183f565b82546001600160a01b031681526001909201546020830152565b9190820180921161055657565b60035462093a8081018091116105565742101590565b6004549060005b82811061197857505050600090565b6119818161167d565b905460039190911b1c6001600160a01b03908116908316146119ab576119a6906118f5565b611969565b505050600190565b600052600860205260406000209060018060a01b0316600052602052604060002054151590565b9190820391821161055657565b6119ef61194c565b611a115760035462093a80810180911161055657611a0e9042906119da565b90565b600090565b600160401b8211610dfe57805491808255828110611a3357505050565b60009182526020822092830192015b828110611a4e57505050565b818155600101611a42565b356001600160a01b03811681036101c45790565b8115611a77570490565b634e487b7160e01b600052601260045260246000fd5b91908110156116985760051b0190565b9060018060a01b03809216600090808252611ae0602094600986526040958685205491828652600882528786208587528252611ae78887208951958680926117f9565b038561185a565b835115611ba257848652600a8252611b0488872054855190611a6d565b93865b8151811015611b96578083611b1f611b8a9385611904565b5116808a5260058087528c8b2080548c908b11611b8f5750611b428a82546119da565b90555b818b528652611b578c8b205482611bfb565b887f2ec3099ee4f85652438af92873ee946884f821d0ddd5206be47e7f5b7125bf5b8d80518b81528a8a820152a36118f5565b611b07565b9055611b45565b50505050505050509050565b5050505050509050565b9190611be557808203611bbd575050565b805482546001600160a01b0319166001600160a01b0391909116178255600190810154910155565b634e487b7160e01b600052600060045260246000fd5b6001600160a01b039081166000818152600760205260408120549092908015611d3e576000199182820195828711611d2a57806001611c398961171e565b500155611c4587611e9d565b15611c53575b505050505050565b600654838101908111611d2a57808703611cee575b5050506006548015611cda5701611c7e8161171e565b611cc6576001818580935501556006558152600760205260408120556006548110611cae575b8080808080611c4b565b80611cbb611cc092611e9d565b611d75565b38611ca4565b634e487b7160e01b84526004849052602484fd5b634e487b7160e01b84526031600452602484fd5b611cfa611d0a9161171e565b50611d048861171e565b90611bac565b611d138661171e565b505416845260076020526040842055388080611c68565b634e487b7160e01b86526011600452602486fd5b5050505050565b9190611be557805182546001600160a01b0319166001600160a01b03919091161782556020015160019190910155565b805b611d7e5750565b600019810190808211611dc557600191821c9180611d9b8361171e565b50015490611da88461171e565b5001541115611dc15781611dbb91611f59565b80611d77565b5050565b60246000634e487b7160e01b81526011600452fd5b6006549060005b80600181811b906001600160ff1b03831683036105565780820180831161055657600283018093116105565786811080611e7c575b611e74575b508582109081611e51575b50611e49575b50808214611e435781611e3e91611f59565b611de1565b50509050565b915038611e2c565b809150611e5d8361171e565b50015490611e6a8561171e565b5001541138611e26565b935038611e1b565b5081611e878261171e565b50015482611e948661171e565b50015411611e16565b90600654915b80600181811b906001600160ff1b0383168303611dc557808201808311611dc55760028301809311611dc55786811080611f38575b611f30575b508582109081611f0d575b50611f05575b50808214611e435781611f0091611f59565b611ea3565b915038611eee565b809150611f198361171e565b50015490611f268561171e565b5001541138611ee8565b935038611edd565b5081611f438261171e565b50015482611f508661171e565b50015411611ed8565b611f87611f6861057c8361171e565b611f7e611f748561171e565b50611d048561171e565b610dbb8461171e565b600181019081811161055657611f9c9061171e565b50546001600160a01b039081166000908152600760205260408120929092556001830192838111611fe25790611fd46040939261171e565b505416815260076020522055565b634e487b7160e01b83526011600452602483fd5b60045490600160401b821015610dfe57610660826001612019940160045561167d565b565b60048054600090818355806121d0575b50600654806120a5575b506120416002546118f5565b91826002554260035560001983019283116120925750507ff12154fbb3acbde4215efbfc7dff56431c667cb6d333d4e525d70f0a77e90ac0604051602081528061208d60208201611795565b0390a2565b634e487b7160e01b825260119052602490fd5b6120ae81611894565b825b8281106121b15750825b8281106121155750825b8281106120d2575050612035565b8060206120e26120ee9385611904565b5101516120f3576118f5565b6120c4565b6121106001600160a01b036121088386611904565b515116611ff6565b6118f5565b6001810180821161219e575b8381106121375750612132906118f5565b6120ba565b612163906020806121488387611904565b510151906121568587611904565b51015110612168576118f5565b612121565b6121728385611904565b5161217d8286611904565b516121888587611904565b526121938486611904565b5061058c8286611904565b634e487b7160e01b855260118652602485fd5b806121c161057c6121cb9361171e565b6105458285611904565b6120b0565b82825260208220908101905b8181106121e9575061202b565b8281556001016121dc56fe1ed37da89ec73264fe3ff50d20d92f19845180819831a4f5dbfb4bf282f0fa578be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0a26469706673582212208a9a8b8a25cd2c8e23964c79dc7fc7dc47306dc7e866ea24ab30fe9c613ee17064736f6c63430008130033";

type MasterContesterRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MasterContesterRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MasterContesterRegistry__factory extends ContractFactory {
  constructor(...args: MasterContesterRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _votingEscrow: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MasterContesterRegistry> {
    return super.deploy(
      _votingEscrow,
      overrides || {}
    ) as Promise<MasterContesterRegistry>;
  }
  override getDeployTransaction(
    _votingEscrow: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_votingEscrow, overrides || {});
  }
  override attach(address: string): MasterContesterRegistry {
    return super.attach(address) as MasterContesterRegistry;
  }
  override connect(signer: Signer): MasterContesterRegistry__factory {
    return super.connect(signer) as MasterContesterRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterContesterRegistryInterface {
    return new utils.Interface(_abi) as MasterContesterRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterContesterRegistry {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MasterContesterRegistry;
  }
}
